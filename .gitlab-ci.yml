# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml
image: python:3.11

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PRE_COMMIT_HOME: "$CI_PROJECT_DIR/.cache/pre-commit"

cache:
  paths:
    - .cache/pip
    - .cache/pre-commit

stages: [lint, test, release]

before_script:
  - python --version ; pip --version  # For debugging
  - python -m venv venv
  - which python
  - source venv/bin/activate
  - pip install pip-tools pre-commit
  - pip-sync reqs/requirements-prod.txt reqs/requirements-dev.txt

lint:
  stage: lint
  script:
    - pre-commit run -a

test:
  stage: test
  script:
    - pytest \
        --cov=popyka/ \
        --cov-report term \
        --cov-report html \
        --cov-report xml:coverage.xml \
        --cov-branch \
        tests/unit_tests/
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

release:
  stage: release
  image: quay.io/buildah/stable
  variables:
    # Use vfs with buildah. Docker offers overlayfs as a default, but Buildah
    # cannot stack overlayfs on top of another overlayfs filesystem.
    STORAGE_DRIVER: vfs
    # Write all image metadata in the docker format, not the standard OCI format.
    # Newer versions of docker can handle the OCI format, but older versions, like
    # the one shipped with Fedora 30, cannot handle the format.
    BUILDAH_FORMAT: docker
  before_script:
    # Let's double-check, make sure we have 'CI_COMMIT_TAG'
    - 'test -n "${CI_COMMIT_TAG}" || { echo "ERROR: CI_COMMIT_TAG is empty?" ; exit 9; }'
    # GitLab container registry credentials taken from the
    # [predefined CI/CD variables](../variables/index.md#predefined-cicd-variables)
    # to authenticate to the registry.
    - echo "$CI_REGISTRY_PASSWORD" | buildah login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - buildah images
    - buildah build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - buildah images
    - buildah push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG
    # - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
